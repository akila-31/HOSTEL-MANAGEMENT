{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akila\\\\OneDrive\\\\Desktop\\\\New folder\\\\login-signup\\\\src\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const navigate = useNavigate();\n  const [role, setRole] = useState('admin');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Send the login request to the backend\n      const response = await axios.post('http://localhost:8080/api/auth/login', {\n        email,\n        password,\n        role\n      });\n      if (response.data.message === 'User found') {\n        // If user is found, navigate to the dashboard\n        navigate('/dashboard');\n      } else {\n        // Handle invalid credentials or user not found\n        setErrorMessage('Invalid email, password, or role.');\n      }\n    } catch (error) {\n      // Handle network errors or other issues\n      setErrorMessage('Error connecting to the server.');\n    }\n  };\n  const handleRoleChange = e => {\n    setRole(e.target.value);\n    props.handleRoleChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            value: role,\n            onChange: handleRoleChange,\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"SrmDZZhSQfeUWGf+hSxK+lw1/HE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import './login.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = (props) => {\n//   const navigate = useNavigate();\n//   const [role, setRole] = useState('admin');\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     // Logic to validate login credentials can be added here\n\n//     // Always navigate to the dashboard page after sign-in\n//     navigate('/dashboard');\n//   };\n\n//   const handleRoleChange = (e) => {\n//     setRole(e.target.value);\n//     props.handleRoleChange(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-form\">\n//         <h2>Login</h2>\n//         <form onSubmit={handleLogin}>\n//           <div className=\"input-group\">\n//             <label htmlFor=\"role\">Role</label>\n//             <select id=\"role\" value={role} onChange={handleRoleChange} className=\"dropdown\">\n//               <option value=\"student\">Student</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n//           <div className=\"input-group\">\n//             <label htmlFor=\"email\">Email id</label>\n//             <input type=\"text\" id=\"email\" />\n//           </div>\n//           <div className=\"input-group\">\n//             <label htmlFor=\"password\">Password</label>\n//             <input type=\"password\" id=\"password\" />\n//           </div>\n//           <button type=\"submit\" className=\"login-button\">Sign In</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login; \nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","props","_s","navigate","role","setRole","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","response","post","data","message","error","handleRoleChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","type","required","_c","$RefreshReg$"],"sources":["C:/Users/akila/OneDrive/Desktop/New folder/login-signup/src/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // Import axios for API calls\r\n\r\nconst Login = (props) => {\r\n  const navigate = useNavigate();\r\n  const [role, setRole] = useState('admin');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Send the login request to the backend\r\n      const response = await axios.post('http://localhost:8080/api/auth/login', {\r\n        email,\r\n        password,\r\n        role\r\n      });\r\n\r\n      if (response.data.message === 'User found') {\r\n        // If user is found, navigate to the dashboard\r\n        navigate('/dashboard');\r\n      } else {\r\n        // Handle invalid credentials or user not found\r\n        setErrorMessage('Invalid email, password, or role.');\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or other issues\r\n      setErrorMessage('Error connecting to the server.');\r\n    }\r\n  };\r\n\r\n  const handleRoleChange = (e) => {\r\n    setRole(e.target.value);\r\n    props.handleRoleChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <select id=\"role\" value={role} onChange={handleRoleChange} className=\"dropdown\">\r\n              <option value=\"student\">Student</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"email\">Email id</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">Sign In</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './login.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = (props) => {\r\n//   const navigate = useNavigate();\r\n//   const [role, setRole] = useState('admin');\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Logic to validate login credentials can be added here\r\n\r\n//     // Always navigate to the dashboard page after sign-in\r\n//     navigate('/dashboard');\r\n//   };\r\n\r\n//   const handleRoleChange = (e) => {\r\n//     setRole(e.target.value);\r\n//     props.handleRoleChange(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-form\">\r\n//         <h2>Login</h2>\r\n//         <form onSubmit={handleLogin}>\r\n//           <div className=\"input-group\">\r\n//             <label htmlFor=\"role\">Role</label>\r\n//             <select id=\"role\" value={role} onChange={handleRoleChange} className=\"dropdown\">\r\n//               <option value=\"student\">Student</option>\r\n//               <option value=\"admin\">Admin</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label htmlFor=\"email\">Email id</label>\r\n//             <input type=\"text\" id=\"email\" />\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label htmlFor=\"password\">Password</label>\r\n//             <input type=\"password\" id=\"password\" />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"login-button\">Sign In</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}