{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akila\\\\OneDrive\\\\Desktop\\\\New folder\\\\login-signup\\\\src\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const navigate = useNavigate();\n  const [role, setRole] = useState('admin');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Handle form submit\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Prepare login request data\n    const loginData = {\n      email: email,\n      password: password,\n      role: role // Send the selected role\n    };\n    try {\n      // Make a POST request to the backend with login credentials\n      const response = await axios.post('http://localhost:8080/api/auth/login', loginData);\n\n      // Check if the login was successful and navigate accordingly\n      if (response.data.message === 'Login successful') {\n        // Save the role if needed (optional)\n        setRole(response.data.role);\n\n        // Always navigate to the dashboard page after sign-in\n        navigate('/dashboard');\n      } else {\n        setErrorMessage(response.data.message); // Set error message if login fails\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setErrorMessage('An error occurred. Please try again.'); // Set error message on failure\n    }\n  };\n\n  // Handle role change (optional)\n  const handleRoleChange = e => {\n    setRole(e.target.value);\n    props.handleRoleChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            value: role,\n            onChange: handleRoleChange,\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"SrmDZZhSQfeUWGf+hSxK+lw1/HE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","props","_s","navigate","role","setRole","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","loginData","response","post","data","message","error","console","handleRoleChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","type","required","_c","$RefreshReg$"],"sources":["C:/Users/akila/OneDrive/Desktop/New folder/login-signup/src/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // Import axios for making HTTP requests\r\n\r\nconst Login = (props) => {\r\n  const navigate = useNavigate();\r\n  const [role, setRole] = useState('admin');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // Handle form submit\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare login request data\r\n    const loginData = {\r\n      email: email,\r\n      password: password,\r\n      role: role // Send the selected role\r\n    };\r\n\r\n    try {\r\n      // Make a POST request to the backend with login credentials\r\n      const response = await axios.post('http://localhost:8080/api/auth/login', loginData);\r\n\r\n      // Check if the login was successful and navigate accordingly\r\n      if (response.data.message === 'Login successful') {\r\n        // Save the role if needed (optional)\r\n        setRole(response.data.role);\r\n\r\n        // Always navigate to the dashboard page after sign-in\r\n        navigate('/dashboard');\r\n      } else {\r\n        setErrorMessage(response.data.message); // Set error message if login fails\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed', error);\r\n      setErrorMessage('An error occurred. Please try again.'); // Set error message on failure\r\n    }\r\n  };\r\n\r\n  // Handle role change (optional)\r\n  const handleRoleChange = (e) => {\r\n    setRole(e.target.value);\r\n    props.handleRoleChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <select id=\"role\" value={role} onChange={handleRoleChange} className=\"dropdown\">\r\n              <option value=\"student\">Student</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"email\">Email id</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">Sign In</button>\r\n        </form>\r\n\r\n        {/* Display error message if login fails */}\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}